// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.7.1
// source: message.proto

//option java_package = "com.shiku.imserver.common.proto";//写的是生成文件的包名
//option java_outer_classname = "MessageProBuf";//生成的类文件名

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//消息 数据
type MessageHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	//发送者;
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	//*
	// 接受者;
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	//*
	// 消息id
	//
	MessageId string `protobuf:"bytes,3,opt,name=messageId,proto3" json:"messageId,omitempty"`
	//*
	// 聊天类型;(单聊,群聊)
	ChatType int32 `protobuf:"varint,4,opt,name=chatType,proto3" json:"chatType,omitempty"`
}

func (x *MessageHead) Reset() {
	*x = MessageHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageHead) ProtoMessage() {}

func (x *MessageHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageHead.ProtoReflect.Descriptor instead.
func (*MessageHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *MessageHead) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MessageHead) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MessageHead) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageHead) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

//消息的 body
type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead  *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	FromUserId   string       `protobuf:"bytes,2,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`
	FromUserName string       `protobuf:"bytes,3,opt,name=fromUserName,proto3" json:"fromUserName,omitempty"`
	ToUserId     string       `protobuf:"bytes,4,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
	ToUserName   string       `protobuf:"bytes,5,opt,name=toUserName,proto3" json:"toUserName,omitempty"`
	//*
	//
	// 消息发送时间
	TimeSend int64 `protobuf:"varint,6,opt,name=timeSend,proto3" json:"timeSend,omitempty"`
	//*
	// 消息类型;
	Type int32 `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	//*
	// 消息内容;
	Content string `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	//*
	// 消息发到哪个群组;
	ObjectId string `protobuf:"bytes,9,opt,name=objectId,proto3" json:"objectId,omitempty"`
	FileName string `protobuf:"bytes,10,opt,name=fileName,proto3" json:"fileName,omitempty"`
	// 是否加密传输
	IsEncrypt  bool  `protobuf:"varint,11,opt,name=isEncrypt,proto3" json:"isEncrypt,omitempty"`
	DeleteTime int64 `protobuf:"varint,12,opt,name=deleteTime,proto3" json:"deleteTime,omitempty"`
	// 是否阅后即焚
	IsReadDel bool  `protobuf:"varint,13,opt,name=isReadDel,proto3" json:"isReadDel,omitempty"`
	FileSize  int64 `protobuf:"varint,14,opt,name=fileSize,proto3" json:"fileSize,omitempty"` //  文件大小 单位字节
	FileTime  int64 `protobuf:"varint,15,opt,name=fileTime,proto3" json:"fileTime,omitempty"` // 文件播放时长  录音时长，视频时长
	// 1.当为地理位置时，有效 2.特殊：当为图片时，该值为图片的宽度
	LocationX float64 `protobuf:"fixed64,16,opt,name=location_x,json=locationX,proto3" json:"location_x,omitempty"`
	// 1.当为地理位置时，有效 2.特殊：当为图片时，该值为图片的高度
	LocationY float64 `protobuf:"fixed64,17,opt,name=location_y,json=locationY,proto3" json:"location_y,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessage) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *ChatMessage) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *ChatMessage) GetFromUserName() string {
	if x != nil {
		return x.FromUserName
	}
	return ""
}

func (x *ChatMessage) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *ChatMessage) GetToUserName() string {
	if x != nil {
		return x.ToUserName
	}
	return ""
}

func (x *ChatMessage) GetTimeSend() int64 {
	if x != nil {
		return x.TimeSend
	}
	return 0
}

func (x *ChatMessage) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *ChatMessage) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ChatMessage) GetIsEncrypt() bool {
	if x != nil {
		return x.IsEncrypt
	}
	return false
}

func (x *ChatMessage) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *ChatMessage) GetIsReadDel() bool {
	if x != nil {
		return x.IsReadDel
	}
	return false
}

func (x *ChatMessage) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *ChatMessage) GetFileTime() int64 {
	if x != nil {
		return x.FileTime
	}
	return 0
}

func (x *ChatMessage) GetLocationX() float64 {
	if x != nil {
		return x.LocationX
	}
	return 0
}

func (x *ChatMessage) GetLocationY() float64 {
	if x != nil {
		return x.LocationY
	}
	return 0
}

//*
// 登陆授权消息
type AuthMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	Token       string       `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Password    string       `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AuthMessage) Reset() {
	*x = AuthMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMessage) ProtoMessage() {}

func (x *AuthMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthMessage.ProtoReflect.Descriptor instead.
func (*AuthMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *AuthMessage) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *AuthMessage) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthMessage) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

//*
// 登陆授权消息结果
type AuthRespMessageProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	//*
	// 登陆结果  1 登陆 成功     0 登陆失败
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	//
	// 提示信息
	Arg       string `protobuf:"bytes,3,opt,name=arg,proto3" json:"arg,omitempty"`
	Token     string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Resources string `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
}

func (x *AuthRespMessageProBuf) Reset() {
	*x = AuthRespMessageProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRespMessageProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRespMessageProBuf) ProtoMessage() {}

func (x *AuthRespMessageProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRespMessageProBuf.ProtoReflect.Descriptor instead.
func (*AuthRespMessageProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *AuthRespMessageProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *AuthRespMessageProBuf) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AuthRespMessageProBuf) GetArg() string {
	if x != nil {
		return x.Arg
	}
	return ""
}

func (x *AuthRespMessageProBuf) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthRespMessageProBuf) GetResources() string {
	if x != nil {
		return x.Resources
	}
	return ""
}

//*
// 消息回执
type MessageReceiptStatusProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	//*
	//   0  发送中     1  到达服务器
	//    2 已接收   3 已读
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	//
	// 提示信息
	MessageId string `protobuf:"bytes,3,opt,name=messageId,proto3" json:"messageId,omitempty"`
}

func (x *MessageReceiptStatusProBuf) Reset() {
	*x = MessageReceiptStatusProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReceiptStatusProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReceiptStatusProBuf) ProtoMessage() {}

func (x *MessageReceiptStatusProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReceiptStatusProBuf.ProtoReflect.Descriptor instead.
func (*MessageReceiptStatusProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *MessageReceiptStatusProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *MessageReceiptStatusProBuf) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MessageReceiptStatusProBuf) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

//*
// 加入群组消息
type JoinGroupMessageProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	Jid         string       `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	Seconds     int64        `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *JoinGroupMessageProBuf) Reset() {
	*x = JoinGroupMessageProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupMessageProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupMessageProBuf) ProtoMessage() {}

func (x *JoinGroupMessageProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupMessageProBuf.ProtoReflect.Descriptor instead.
func (*JoinGroupMessageProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *JoinGroupMessageProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *JoinGroupMessageProBuf) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *JoinGroupMessageProBuf) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type ExitGroupMessageProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	Jid         string       `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
}

func (x *ExitGroupMessageProBuf) Reset() {
	*x = ExitGroupMessageProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitGroupMessageProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitGroupMessageProBuf) ProtoMessage() {}

func (x *ExitGroupMessageProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitGroupMessageProBuf.ProtoReflect.Descriptor instead.
func (*ExitGroupMessageProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *ExitGroupMessageProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *ExitGroupMessageProBuf) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

//*
// 群组协议结果
type GroupMessageRespProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	Jid         string       `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	//*
	// 1     成功
	// -1  失败
	Status int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	//*
	// 是否退出群组协议
	IsExit bool `protobuf:"varint,4,opt,name=isExit,proto3" json:"isExit,omitempty"`
}

func (x *GroupMessageRespProBuf) Reset() {
	*x = GroupMessageRespProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessageRespProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessageRespProBuf) ProtoMessage() {}

func (x *GroupMessageRespProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessageRespProBuf.ProtoReflect.Descriptor instead.
func (*GroupMessageRespProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *GroupMessageRespProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *GroupMessageRespProBuf) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *GroupMessageRespProBuf) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GroupMessageRespProBuf) GetIsExit() bool {
	if x != nil {
		return x.IsExit
	}
	return false
}

//*
// 漫游聊天记录
type PullMessageHistoryRecordReqProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	Jid         string       `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	//*
	// 请求数量
	Size int32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	//*
	// 开始时间
	StartTime int64 `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	//*
	// 结束时间
	EndTime int64 `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *PullMessageHistoryRecordReqProBuf) Reset() {
	*x = PullMessageHistoryRecordReqProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMessageHistoryRecordReqProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMessageHistoryRecordReqProBuf) ProtoMessage() {}

func (x *PullMessageHistoryRecordReqProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMessageHistoryRecordReqProBuf.ProtoReflect.Descriptor instead.
func (*PullMessageHistoryRecordReqProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *PullMessageHistoryRecordReqProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *PullMessageHistoryRecordReqProBuf) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *PullMessageHistoryRecordReqProBuf) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PullMessageHistoryRecordReqProBuf) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PullMessageHistoryRecordReqProBuf) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

//*
// 漫游聊天记录  结果
type PullMessageHistoryRecordRespProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	// 请求ID 标识
	MessageId string `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Jid       string `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	//*
	//
	ChatType    int32          `protobuf:"varint,3,opt,name=chatType,proto3" json:"chatType,omitempty"`
	MessageList []*ChatMessage `protobuf:"bytes,4,rep,name=messageList,proto3" json:"messageList,omitempty"`
	//*
	// 消息总数
	Count int32 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PullMessageHistoryRecordRespProBuf) Reset() {
	*x = PullMessageHistoryRecordRespProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMessageHistoryRecordRespProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMessageHistoryRecordRespProBuf) ProtoMessage() {}

func (x *PullMessageHistoryRecordRespProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMessageHistoryRecordRespProBuf.ProtoReflect.Descriptor instead.
func (*PullMessageHistoryRecordRespProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *PullMessageHistoryRecordRespProBuf) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *PullMessageHistoryRecordRespProBuf) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *PullMessageHistoryRecordRespProBuf) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *PullMessageHistoryRecordRespProBuf) GetMessageList() []*ChatMessage {
	if x != nil {
		return x.MessageList
	}
	return nil
}

func (x *PullMessageHistoryRecordRespProBuf) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

//*
// 批量拉取群组消息数量
type PullBatchGroupMessageReqProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	//*
	// jid 群组jid   lastTime 群组的最后一条消息时间
	// 群组数据集合["jid1,lastTime","jid2,lastTime"]
	JidList []string `protobuf:"bytes,2,rep,name=jidList,proto3" json:"jidList,omitempty"`
	//*
	//拉取消息的截止时间
	EndTime int64 `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *PullBatchGroupMessageReqProBuf) Reset() {
	*x = PullBatchGroupMessageReqProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullBatchGroupMessageReqProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullBatchGroupMessageReqProBuf) ProtoMessage() {}

func (x *PullBatchGroupMessageReqProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullBatchGroupMessageReqProBuf.ProtoReflect.Descriptor instead.
func (*PullBatchGroupMessageReqProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *PullBatchGroupMessageReqProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *PullBatchGroupMessageReqProBuf) GetJidList() []string {
	if x != nil {
		return x.JidList
	}
	return nil
}

func (x *PullBatchGroupMessageReqProBuf) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

//*
// 批量拉取群组消息数量   及最后几条消息  结果   (单个群组的)
type PullGroupMessageRespProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	// 请求ID 标识
	MessageId string `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	//*
	//群组jid
	Jid string `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	//*
	//群组消息数量
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	//*
	//消息集合
	MessageList []*ChatMessage `protobuf:"bytes,4,rep,name=messageList,proto3" json:"messageList,omitempty"`
}

func (x *PullGroupMessageRespProBuf) Reset() {
	*x = PullGroupMessageRespProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullGroupMessageRespProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullGroupMessageRespProBuf) ProtoMessage() {}

func (x *PullGroupMessageRespProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullGroupMessageRespProBuf.ProtoReflect.Descriptor instead.
func (*PullGroupMessageRespProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{11}
}

func (x *PullGroupMessageRespProBuf) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *PullGroupMessageRespProBuf) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *PullGroupMessageRespProBuf) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PullGroupMessageRespProBuf) GetMessageList() []*ChatMessage {
	if x != nil {
		return x.MessageList
	}
	return nil
}

//心跳协议
type PingMessageProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
}

func (x *PingMessageProBuf) Reset() {
	*x = PingMessageProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMessageProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMessageProBuf) ProtoMessage() {}

func (x *PingMessageProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMessageProBuf.ProtoReflect.Descriptor instead.
func (*PingMessageProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{12}
}

func (x *PingMessageProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

type CommonSuccessProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
}

func (x *CommonSuccessProBuf) Reset() {
	*x = CommonSuccessProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonSuccessProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonSuccessProBuf) ProtoMessage() {}

func (x *CommonSuccessProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonSuccessProBuf.ProtoReflect.Descriptor instead.
func (*CommonSuccessProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{13}
}

func (x *CommonSuccessProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

//错误协议
type CommonErrorProBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead *MessageHead `protobuf:"bytes,1,opt,name=messageHead,proto3" json:"messageHead,omitempty"`
	Code        int32        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Arg         string       `protobuf:"bytes,3,opt,name=arg,proto3" json:"arg,omitempty"` //错误参数，格式：xx,xxx,xxxx
}

func (x *CommonErrorProBuf) Reset() {
	*x = CommonErrorProBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonErrorProBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonErrorProBuf) ProtoMessage() {}

func (x *CommonErrorProBuf) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonErrorProBuf.ProtoReflect.Descriptor instead.
func (*CommonErrorProBuf) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{14}
}

func (x *CommonErrorProBuf) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *CommonErrorProBuf) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonErrorProBuf) GetArg() string {
	if x != nil {
		return x.Arg
	}
	return ""
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0x6b, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x94, 0x04, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x78, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x22, 0x72, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x15,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x72, 0x6f, 0x42, 0x75, 0x66, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x72, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x72, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x72, 0x6f, 0x42, 0x75, 0x66, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x77,
	0x0a, 0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x50, 0x72, 0x6f, 0x42, 0x75, 0x66, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x5d, 0x0a, 0x16, 0x45, 0x78, 0x69, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x42, 0x75,
	0x66, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x50, 0x72, 0x6f, 0x42, 0x75,
	0x66, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x45, 0x78, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x45, 0x78, 0x69, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x21, 0x50, 0x75, 0x6c, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x50, 0x72, 0x6f, 0x42, 0x75, 0x66, 0x12, 0x31, 0x0a, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb9, 0x01,
	0x0a, 0x22, 0x50, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x50, 0x72,
	0x6f, 0x42, 0x75, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6a, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x1e, 0x50, 0x75,
	0x6c, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x50, 0x72, 0x6f, 0x42, 0x75, 0x66, 0x12, 0x31, 0x0a, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6a, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x1a, 0x50, 0x75, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x50, 0x72, 0x6f, 0x42,
	0x75, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x11, 0x50,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x42, 0x75, 0x66,
	0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x22, 0x48, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x42, 0x75, 0x66, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x22, 0x6c, 0x0a,
	0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x42,
	0x75, 0x66, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x67, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_message_proto_goTypes = []interface{}{
	(*MessageHead)(nil),                        // 0: pb.MessageHead
	(*ChatMessage)(nil),                        // 1: pb.ChatMessage
	(*AuthMessage)(nil),                        // 2: pb.AuthMessage
	(*AuthRespMessageProBuf)(nil),              // 3: pb.AuthRespMessageProBuf
	(*MessageReceiptStatusProBuf)(nil),         // 4: pb.MessageReceiptStatusProBuf
	(*JoinGroupMessageProBuf)(nil),             // 5: pb.JoinGroupMessageProBuf
	(*ExitGroupMessageProBuf)(nil),             // 6: pb.ExitGroupMessageProBuf
	(*GroupMessageRespProBuf)(nil),             // 7: pb.GroupMessageRespProBuf
	(*PullMessageHistoryRecordReqProBuf)(nil),  // 8: pb.PullMessageHistoryRecordReqProBuf
	(*PullMessageHistoryRecordRespProBuf)(nil), // 9: pb.PullMessageHistoryRecordRespProBuf
	(*PullBatchGroupMessageReqProBuf)(nil),     // 10: pb.PullBatchGroupMessageReqProBuf
	(*PullGroupMessageRespProBuf)(nil),         // 11: pb.PullGroupMessageRespProBuf
	(*PingMessageProBuf)(nil),                  // 12: pb.PingMessageProBuf
	(*CommonSuccessProBuf)(nil),                // 13: pb.CommonSuccessProBuf
	(*CommonErrorProBuf)(nil),                  // 14: pb.CommonErrorProBuf
}
var file_message_proto_depIdxs = []int32{
	0,  // 0: pb.ChatMessage.messageHead:type_name -> pb.MessageHead
	0,  // 1: pb.AuthMessage.messageHead:type_name -> pb.MessageHead
	0,  // 2: pb.AuthRespMessageProBuf.messageHead:type_name -> pb.MessageHead
	0,  // 3: pb.MessageReceiptStatusProBuf.messageHead:type_name -> pb.MessageHead
	0,  // 4: pb.JoinGroupMessageProBuf.messageHead:type_name -> pb.MessageHead
	0,  // 5: pb.ExitGroupMessageProBuf.messageHead:type_name -> pb.MessageHead
	0,  // 6: pb.GroupMessageRespProBuf.messageHead:type_name -> pb.MessageHead
	0,  // 7: pb.PullMessageHistoryRecordReqProBuf.messageHead:type_name -> pb.MessageHead
	1,  // 8: pb.PullMessageHistoryRecordRespProBuf.messageList:type_name -> pb.ChatMessage
	0,  // 9: pb.PullBatchGroupMessageReqProBuf.messageHead:type_name -> pb.MessageHead
	1,  // 10: pb.PullGroupMessageRespProBuf.messageList:type_name -> pb.ChatMessage
	0,  // 11: pb.PingMessageProBuf.messageHead:type_name -> pb.MessageHead
	0,  // 12: pb.CommonSuccessProBuf.messageHead:type_name -> pb.MessageHead
	0,  // 13: pb.CommonErrorProBuf.messageHead:type_name -> pb.MessageHead
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRespMessageProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReceiptStatusProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupMessageProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitGroupMessageProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessageRespProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMessageHistoryRecordReqProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMessageHistoryRecordRespProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullBatchGroupMessageReqProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullGroupMessageRespProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMessageProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonSuccessProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonErrorProBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
